name: CI/CD Pipeline

on:
    pull_request:
        types:
        - opened
        - edited
        - synchronize

jobs:
  pr-linter:
    name: Validate PR Title
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Validate PR Title
        run: |
          npm install axios
          node .github/scripts/checkPRTitle.js "${{ secrets.SLACK_WEBHOOK_URL }}"

      - name: Fail if PR Title is Invalid
        if: failure()
        run: exit 1

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: pr-linter # Ensure PR Linter runs first

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npx vitest --run

      - name: Notify Slack on Failure
        if: failure()
        run: node .github/scripts/slackNotify.js "${{ secrets.SLACK_WEBHOOK_URL }}" "failure" "Unit Tests"

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: pr-linter # Ensure tests pass before building

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Build Docker Image
        run: docker build -t my-app .

      - name: Notify Slack on Success
        if: success()
        run: node .github/scripts/slackNotify.js "${{ secrets.SLACK_WEBHOOK_URL }}" "success" "Docker Build"

      - name: Notify Slack on Failure
        if: failure()
        run: node .github/scripts/slackNotify.js "${{ secrets.SLACK_WEBHOOK_URL }}" "failure" "Docker Build"
